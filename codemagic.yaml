workflows:
  ios_appstore_manual_signing:
    name: iOS • App Store • Manual signing
    max_build_duration: 60

    environment:
      groups:
        - signing            # CERTIFICATE_P12, CERTIFICATE_PASSWORD, MOBILEPROVISION
        - appstore_connect   # APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY
      vars:
        XCODE_PROJECT: "Trackify.xcodeproj"   # если появится Pods/.xcworkspace — скажу, поменяем на workspace
        XCODE_SCHEME: "Trackify"
        BUNDLE_ID: "dev.annebunas.trackifyrrrr"
        TEAM_ID: "3S4N4WVT3G"
        EXPORT_METHOD: "app-store"

    scripts:
      - name: Импорт сертификата и профиля
        script: |
          echo "$CERTIFICATE_P12" | base64 --decode > cert.p12
          echo "$MOBILEPROVISION" | base64 --decode > profile.mobileprovision

          # Keychain + сертификат (правильная команда Codemagic CLI)
          keychain initialize
          # если пароль есть — передадим, если пустой — флаг не добавляем
          if [ -n "$CERTIFICATE_PASSWORD" ]; then
            keychain add-certificates --certificate cert.p12 --certificate-password "$CERTIFICATE_PASSWORD"
          else
            keychain add-certificates --certificate cert.p12
          fi

          # Установка provisioning profile и извлечение UUID
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          PROFILE_UUID=$(/usr/libexec/PlistBuddy -c 'Print UUID' /dev/stdin <<< $(security cms -D -i profile.mobileprovision))
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$PROFILE_UUID.mobileprovision
          echo "Using Provisioning Profile UUID: $PROFILE_UUID"

          # Сохраняем UUID для следующих шагов
          echo "PROFILE_UUID=$PROFILE_UUID" >> $CM_ENV

          # Корректный exportOptions.plist (валидный XML)
          cat > exportOptions.plist <<EOI
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>${EXPORT_METHOD}</string>
            <key>teamID</key><string>${TEAM_ID}</string>
            <key>signingStyle</key><string>manual</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>${BUNDLE_ID}</key><string>${PROFILE_UUID}</string>
            </dict>
            <key>compileBitcode</key><false/>
            <key>stripSwiftSymbols</key><true/>
            <key>destination</key><string>export</string>
          </dict>
          </plist>
          EOI
          /usr/bin/plutil -lint exportOptions.plist

          # Прописываем профиль в проект на время CI (без --scheme, так корректно)
          xcode-project use-profiles \
            --project "$XCODE_PROJECT" \
            --export-options-plist "exportOptions.plist"

      - name: Сборка .ipa (Xcode project)
        script: |
          # Схема должна быть Shared в репозитории (Product > Scheme > Manage Schemes…)
          xcode-project build-ipa \
            --project "$XCODE_PROJECT" \
            --scheme "$XCODE_SCHEME" \
            --export-options-plist "exportOptions.plist"

    artifacts:
      - $CM_EXPORT_DIR/*.ipa
      - $CM_EXPORT_DIR/*.dSYM.zip
      - $CM_EXPORT_DIR/*.xcarchive

    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
